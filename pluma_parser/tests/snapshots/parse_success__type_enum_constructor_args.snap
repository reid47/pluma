---
source: compiler/tests/parse_success.rs
expression: "enum Thing\n  | Wow Int\n  | Cool(String)\n  | NoArg\n  | TupleArg (Int, String)"
---

=== Source ===
enum Thing
  | Wow Int
  | Cool(String)
  | NoArg
  | TupleArg (Int, String)

=== Tokens ===
[
    KeywordEnum(
        0,
        4,
    ),
    Identifier(
        5,
        10,
    ),
    LineBreak(
        10,
        11,
    ),
    Pipe(
        13,
        14,
    ),
    Identifier(
        15,
        18,
    ),
    Identifier(
        19,
        22,
    ),
    LineBreak(
        22,
        23,
    ),
    Pipe(
        25,
        26,
    ),
    Identifier(
        27,
        31,
    ),
    LeftParen(
        31,
        32,
    ),
    Identifier(
        32,
        38,
    ),
    RightParen(
        38,
        39,
    ),
    LineBreak(
        39,
        40,
    ),
    Pipe(
        42,
        43,
    ),
    Identifier(
        44,
        49,
    ),
    LineBreak(
        49,
        50,
    ),
    Pipe(
        52,
        53,
    ),
    Identifier(
        54,
        62,
    ),
    LeftParen(
        63,
        64,
    ),
    Identifier(
        64,
        67,
    ),
    Comma(
        67,
        68,
    ),
    Identifier(
        69,
        75,
    ),
    RightParen(
        75,
        76,
    ),
]

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        76,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                76,
            ),
            kind: TypeDef(
                TypeDefNode {
                    pos: (
                        0,
                        76,
                    ),
                    kind: Enum {
                        variants: [
                            EnumVariantNode {
                                pos: (
                                    15,
                                    22,
                                ),
                                kind: Constructor(
                                    IdentifierNode {
                                        pos: (
                                            15,
                                            18,
                                        ),
                                        name: "Wow",
                                    },
                                    TypeExprNode {
                                        pos: (
                                            19,
                                            22,
                                        ),
                                        kind: Single(
                                            TypeIdentifierNode {
                                                pos: (
                                                    19,
                                                    22,
                                                ),
                                                name: "Int",
                                                generics: [],
                                            },
                                        ),
                                        typ: Unknown,
                                    },
                                ),
                            },
                            EnumVariantNode {
                                pos: (
                                    27,
                                    39,
                                ),
                                kind: Constructor(
                                    IdentifierNode {
                                        pos: (
                                            27,
                                            31,
                                        ),
                                        name: "Cool",
                                    },
                                    TypeExprNode {
                                        pos: (
                                            31,
                                            39,
                                        ),
                                        kind: Grouping(
                                            TypeExprNode {
                                                pos: (
                                                    32,
                                                    38,
                                                ),
                                                kind: Single(
                                                    TypeIdentifierNode {
                                                        pos: (
                                                            32,
                                                            38,
                                                        ),
                                                        name: "String",
                                                        generics: [],
                                                    },
                                                ),
                                                typ: Unknown,
                                            },
                                        ),
                                        typ: Unknown,
                                    },
                                ),
                            },
                            EnumVariantNode {
                                pos: (
                                    44,
                                    49,
                                ),
                                kind: Identifier(
                                    IdentifierNode {
                                        pos: (
                                            44,
                                            49,
                                        ),
                                        name: "NoArg",
                                    },
                                ),
                            },
                            EnumVariantNode {
                                pos: (
                                    54,
                                    76,
                                ),
                                kind: Constructor(
                                    IdentifierNode {
                                        pos: (
                                            54,
                                            62,
                                        ),
                                        name: "TupleArg",
                                    },
                                    TypeExprNode {
                                        pos: (
                                            63,
                                            76,
                                        ),
                                        kind: Tuple(
                                            [
                                                TypeExprNode {
                                                    pos: (
                                                        64,
                                                        67,
                                                    ),
                                                    kind: Single(
                                                        TypeIdentifierNode {
                                                            pos: (
                                                                64,
                                                                67,
                                                            ),
                                                            name: "Int",
                                                            generics: [],
                                                        },
                                                    ),
                                                    typ: Unknown,
                                                },
                                                TypeExprNode {
                                                    pos: (
                                                        69,
                                                        75,
                                                    ),
                                                    kind: Single(
                                                        TypeIdentifierNode {
                                                            pos: (
                                                                69,
                                                                75,
                                                            ),
                                                            name: "String",
                                                            generics: [],
                                                        },
                                                    ),
                                                    typ: Unknown,
                                                },
                                            ],
                                        ),
                                        typ: Unknown,
                                    },
                                ),
                            },
                        ],
                    },
                    name: TypeIdentifierNode {
                        pos: (
                            5,
                            10,
                        ),
                        name: "Thing",
                        generics: [],
                    },
                    generic_type_constraints: [],
                },
            ),
        },
    ],
}

