---
source: pluma_parser/tests/parse_success.rs
expression: "enum Optional<A> where A :: Any\n  | Some(A)\n  | None"
---

=== Source ===
enum Optional<A> where A :: Any
  | Some(A)
  | None

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        52,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                52,
            ),
            kind: TypeDef(
                TypeDefNode {
                    pos: (
                        0,
                        52,
                    ),
                    visibility: Public,
                    kind: Enum {
                        variants: [
                            EnumVariantNode {
                                pos: (
                                    36,
                                    43,
                                ),
                                kind: Constructor(
                                    IdentifierNode {
                                        pos: (
                                            36,
                                            40,
                                        ),
                                        name: "Some",
                                    },
                                    TypeExprNode {
                                        pos: (
                                            40,
                                            43,
                                        ),
                                        kind: Grouping(
                                            TypeExprNode {
                                                pos: (
                                                    41,
                                                    42,
                                                ),
                                                kind: Single(
                                                    TypeIdentifierNode {
                                                        pos: (
                                                            41,
                                                            42,
                                                        ),
                                                        name: "A",
                                                        generics: [],
                                                        constraints: None,
                                                    },
                                                ),
                                                typ: Unknown,
                                            },
                                        ),
                                        typ: Unknown,
                                    },
                                ),
                            },
                            EnumVariantNode {
                                pos: (
                                    48,
                                    52,
                                ),
                                kind: Identifier(
                                    IdentifierNode {
                                        pos: (
                                            48,
                                            52,
                                        ),
                                        name: "None",
                                    },
                                ),
                            },
                        ],
                    },
                    name: TypeIdentifierNode {
                        pos: (
                            5,
                            16,
                        ),
                        name: "Optional",
                        generics: [
                            TypeExprNode {
                                pos: (
                                    14,
                                    15,
                                ),
                                kind: Single(
                                    TypeIdentifierNode {
                                        pos: (
                                            14,
                                            15,
                                        ),
                                        name: "A",
                                        generics: [],
                                        constraints: None,
                                    },
                                ),
                                typ: Unknown,
                            },
                        ],
                        constraints: None,
                    },
                    generic_type_constraints: [
                        (
                            IdentifierNode {
                                pos: (
                                    23,
                                    24,
                                ),
                                name: "A",
                            },
                            TypeIdentifierNode {
                                pos: (
                                    28,
                                    31,
                                ),
                                name: "Any",
                                generics: [],
                                constraints: None,
                            },
                        ),
                    ],
                },
            ),
        },
    ],
}

