---
source: pluma_parser/tests/parse_success.rs
expression: "struct Person (name :: String, age :: Int)"
---

=== Source ===
struct Person (name :: String, age :: Int)

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        42,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                42,
            ),
            kind: TypeDef(
                TypeDefNode {
                    pos: (
                        0,
                        42,
                    ),
                    visibility: Public,
                    kind: Struct {
                        inner: TypeExprNode {
                            pos: (
                                14,
                                42,
                            ),
                            kind: LabeledTuple(
                                [
                                    (
                                        IdentifierNode {
                                            pos: (
                                                15,
                                                19,
                                            ),
                                            name: "name",
                                        },
                                        TypeExprNode {
                                            pos: (
                                                23,
                                                29,
                                            ),
                                            kind: Single(
                                                TypeIdentifierNode {
                                                    pos: (
                                                        23,
                                                        29,
                                                    ),
                                                    name: "String",
                                                    generics: [],
                                                    constraints: None,
                                                },
                                            ),
                                            typ: Unknown,
                                        },
                                    ),
                                    (
                                        IdentifierNode {
                                            pos: (
                                                31,
                                                34,
                                            ),
                                            name: "age",
                                        },
                                        TypeExprNode {
                                            pos: (
                                                38,
                                                41,
                                            ),
                                            kind: Single(
                                                TypeIdentifierNode {
                                                    pos: (
                                                        38,
                                                        41,
                                                    ),
                                                    name: "Int",
                                                    generics: [],
                                                    constraints: None,
                                                },
                                            ),
                                            typ: Unknown,
                                        },
                                    ),
                                ],
                            ),
                            typ: Unknown,
                        },
                    },
                    name: TypeIdentifierNode {
                        pos: (
                            7,
                            13,
                        ),
                        name: "Person",
                        generics: [],
                        constraints: None,
                    },
                    generic_type_constraints: [],
                },
            ),
        },
    ],
}

