---
source: tests/src/parse_success.rs
expression: "let Person (name, age) = Person (\"Reid\", 26)"
---

=== Source ===
let Person (name, age) = Person ("Reid", 26)

=== Tokens ===
[
    KeywordLet(
        0,
        3,
    ),
    Identifier(
        4,
        10,
    ),
    LeftParen(
        11,
        12,
    ),
    Identifier(
        12,
        16,
    ),
    Comma(
        16,
        17,
    ),
    Identifier(
        18,
        21,
    ),
    RightParen(
        21,
        22,
    ),
    Equals(
        23,
        24,
    ),
    Identifier(
        25,
        31,
    ),
    LeftParen(
        32,
        33,
    ),
    StringLiteral(
        34,
        38,
    ),
    Comma(
        39,
        40,
    ),
    DecimalDigits(
        41,
        43,
    ),
    RightParen(
        43,
        44,
    ),
]

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        44,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                44,
            ),
            kind: Let(
                LetNode {
                    pos: (
                        0,
                        44,
                    ),
                    pattern: PatternNode {
                        pos: (
                            4,
                            22,
                        ),
                        kind: Constructor(
                            IdentifierNode {
                                pos: (
                                    4,
                                    10,
                                ),
                                name: "Person",
                            },
                            PatternNode {
                                pos: (
                                    11,
                                    22,
                                ),
                                kind: Tuple(
                                    [
                                        PatternNode {
                                            pos: (
                                                12,
                                                16,
                                            ),
                                            kind: Identifier(
                                                IdentifierNode {
                                                    pos: (
                                                        12,
                                                        16,
                                                    ),
                                                    name: "name",
                                                },
                                            ),
                                        },
                                        PatternNode {
                                            pos: (
                                                18,
                                                21,
                                            ),
                                            kind: Identifier(
                                                IdentifierNode {
                                                    pos: (
                                                        18,
                                                        21,
                                                    ),
                                                    name: "age",
                                                },
                                            ),
                                        },
                                    ],
                                ),
                            },
                        ),
                    },
                    value: ExprNode {
                        pos: (
                            25,
                            44,
                        ),
                        kind: Call(
                            CallNode {
                                pos: (
                                    25,
                                    44,
                                ),
                                callee: ExprNode {
                                    pos: (
                                        25,
                                        31,
                                    ),
                                    kind: Identifier(
                                        IdentifierNode {
                                            pos: (
                                                25,
                                                31,
                                            ),
                                            name: "Person",
                                        },
                                    ),
                                    typ: Unknown,
                                },
                                args: [
                                    ExprNode {
                                        pos: (
                                            32,
                                            44,
                                        ),
                                        kind: Tuple(
                                            [
                                                ExprNode {
                                                    pos: (
                                                        34,
                                                        38,
                                                    ),
                                                    kind: Literal(
                                                        LiteralNode {
                                                            pos: (
                                                                34,
                                                                38,
                                                            ),
                                                            kind: Str(
                                                                "Reid",
                                                            ),
                                                        },
                                                    ),
                                                    typ: Unknown,
                                                },
                                                ExprNode {
                                                    pos: (
                                                        41,
                                                        43,
                                                    ),
                                                    kind: Literal(
                                                        LiteralNode {
                                                            pos: (
                                                                41,
                                                                43,
                                                            ),
                                                            kind: IntDecimal(
                                                                26,
                                                            ),
                                                        },
                                                    ),
                                                    typ: Unknown,
                                                },
                                            ],
                                        ),
                                        typ: Unknown,
                                    },
                                ],
                                typ: Unknown,
                            },
                        ),
                        typ: Unknown,
                    },
                },
            ),
        },
    ],
}

