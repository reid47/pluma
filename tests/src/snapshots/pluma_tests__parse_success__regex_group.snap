---
source: tests/src/parse_success.rs
expression: "/\"w\" (\"o\" | \"a\")? \"w\"/"
---

=== Source ===
/"w" ("o" | "a")? "w"/

=== Tokens ===
[
    ForwardSlash(
        0,
        1,
    ),
    StringLiteral(
        2,
        3,
    ),
    LeftParen(
        5,
        6,
    ),
    StringLiteral(
        7,
        8,
    ),
    Pipe(
        10,
        11,
    ),
    StringLiteral(
        13,
        14,
    ),
    RightParen(
        15,
        16,
    ),
    Operator(
        16,
        17,
    ),
    StringLiteral(
        19,
        20,
    ),
    ForwardSlash(
        21,
        22,
    ),
]

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        22,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                22,
            ),
            kind: Expr(
                ExprNode {
                    pos: (
                        0,
                        22,
                    ),
                    kind: RegExpr(
                        RegExprNode {
                            pos: (
                                0,
                                0,
                            ),
                            kind: Sequence(
                                [
                                    RegExprNode {
                                        pos: (
                                            2,
                                            3,
                                        ),
                                        kind: Literal(
                                            "w",
                                        ),
                                    },
                                    RegExprNode {
                                        pos: (
                                            16,
                                            6,
                                        ),
                                        kind: OneOrZero(
                                            RegExprNode {
                                                pos: (
                                                    5,
                                                    6,
                                                ),
                                                kind: Grouping(
                                                    RegExprNode {
                                                        pos: (
                                                            7,
                                                            14,
                                                        ),
                                                        kind: Alternation(
                                                            [
                                                                RegExprNode {
                                                                    pos: (
                                                                        7,
                                                                        8,
                                                                    ),
                                                                    kind: Literal(
                                                                        "o",
                                                                    ),
                                                                },
                                                                RegExprNode {
                                                                    pos: (
                                                                        13,
                                                                        14,
                                                                    ),
                                                                    kind: Literal(
                                                                        "a",
                                                                    ),
                                                                },
                                                            ],
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    RegExprNode {
                                        pos: (
                                            19,
                                            20,
                                        ),
                                        kind: Literal(
                                            "w",
                                        ),
                                    },
                                ],
                            ),
                        },
                    ),
                    typ: Unknown,
                },
            ),
        },
    ],
}

