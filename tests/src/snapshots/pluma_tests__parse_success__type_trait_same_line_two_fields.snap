---
source: tests/src/parse_success.rs
expression: "trait HasNameAndAge . name :: String . age :: Int"
---

=== Source ===
trait HasNameAndAge . name :: String . age :: Int

=== Tokens ===
[
    KeywordTrait(
        0,
        5,
    ),
    Identifier(
        6,
        19,
    ),
    Dot(
        20,
        21,
    ),
    Identifier(
        22,
        26,
    ),
    DoubleColon(
        27,
        29,
    ),
    Identifier(
        30,
        36,
    ),
    Dot(
        37,
        38,
    ),
    Identifier(
        39,
        42,
    ),
    DoubleColon(
        43,
        45,
    ),
    Identifier(
        46,
        49,
    ),
]

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        49,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                49,
            ),
            kind: TypeDef(
                TypeDefNode {
                    pos: (
                        0,
                        49,
                    ),
                    kind: Trait {
                        fields: [
                            (
                                IdentifierNode {
                                    pos: (
                                        22,
                                        26,
                                    ),
                                    name: "name",
                                    typ: None,
                                },
                                TypeExprNode {
                                    pos: (
                                        30,
                                        36,
                                    ),
                                    kind: Single(
                                        TypeIdentifierNode {
                                            pos: (
                                                30,
                                                36,
                                            ),
                                            name: IdentifierNode {
                                                pos: (
                                                    30,
                                                    36,
                                                ),
                                                name: "String",
                                                typ: None,
                                            },
                                            generics: [],
                                        },
                                    ),
                                },
                            ),
                            (
                                IdentifierNode {
                                    pos: (
                                        39,
                                        42,
                                    ),
                                    name: "age",
                                    typ: None,
                                },
                                TypeExprNode {
                                    pos: (
                                        46,
                                        49,
                                    ),
                                    kind: Single(
                                        TypeIdentifierNode {
                                            pos: (
                                                46,
                                                49,
                                            ),
                                            name: IdentifierNode {
                                                pos: (
                                                    46,
                                                    49,
                                                ),
                                                name: "Int",
                                                typ: None,
                                            },
                                            generics: [],
                                        },
                                    ),
                                },
                            ),
                        ],
                        methods: [],
                    },
                    name: TypeIdentifierNode {
                        pos: (
                            6,
                            19,
                        ),
                        name: IdentifierNode {
                            pos: (
                                6,
                                19,
                            ),
                            name: "HasNameAndAge",
                            typ: None,
                        },
                        generics: [],
                    },
                    generic_type_constraints: [],
                },
            ),
        },
    ],
}

