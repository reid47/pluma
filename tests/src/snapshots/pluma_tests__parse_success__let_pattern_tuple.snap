---
source: tests/src/parse_success.rs
expression: "let (a, b) = (47, \"cool\")"
---

=== Source ===
let (a, b) = (47, "cool")

=== Tokens ===
[
    KeywordLet(
        0,
        3,
    ),
    LeftParen(
        4,
        5,
    ),
    Identifier(
        5,
        6,
    ),
    Comma(
        6,
        7,
    ),
    Identifier(
        8,
        9,
    ),
    RightParen(
        9,
        10,
    ),
    Equals(
        11,
        12,
    ),
    LeftParen(
        13,
        14,
    ),
    DecimalDigits(
        14,
        16,
    ),
    Comma(
        16,
        17,
    ),
    StringLiteral(
        19,
        23,
    ),
    RightParen(
        24,
        25,
    ),
]

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        25,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                25,
            ),
            kind: Let(
                LetNode {
                    pos: (
                        0,
                        25,
                    ),
                    pattern: PatternNode {
                        pos: (
                            4,
                            10,
                        ),
                        kind: Tuple(
                            [
                                PatternNode {
                                    pos: (
                                        5,
                                        6,
                                    ),
                                    kind: Identifier(
                                        IdentifierNode {
                                            pos: (
                                                5,
                                                6,
                                            ),
                                            name: "a",
                                            typ: None,
                                        },
                                    ),
                                },
                                PatternNode {
                                    pos: (
                                        8,
                                        9,
                                    ),
                                    kind: Identifier(
                                        IdentifierNode {
                                            pos: (
                                                8,
                                                9,
                                            ),
                                            name: "b",
                                            typ: None,
                                        },
                                    ),
                                },
                            ],
                        ),
                    },
                    value: ExprNode {
                        pos: (
                            13,
                            25,
                        ),
                        kind: Tuple(
                            [
                                ExprNode {
                                    pos: (
                                        14,
                                        16,
                                    ),
                                    kind: Literal(
                                        LiteralNode {
                                            pos: (
                                                14,
                                                16,
                                            ),
                                            kind: IntDecimal(
                                                47,
                                            ),
                                            typ: None,
                                        },
                                    ),
                                    typ: None,
                                },
                                ExprNode {
                                    pos: (
                                        19,
                                        23,
                                    ),
                                    kind: Literal(
                                        LiteralNode {
                                            pos: (
                                                19,
                                                23,
                                            ),
                                            kind: Str(
                                                "cool",
                                            ),
                                            typ: None,
                                        },
                                    ),
                                    typ: None,
                                },
                            ],
                        ),
                        typ: None,
                    },
                },
            ),
        },
    ],
}

