---
source: tests/src/parse_success.rs
expression: multiply 1 by 2
---

=== Source ===
multiply 1 by 2

=== Tokens ===
[
    Identifier(
        0,
        8,
    ),
    DecimalDigits(
        9,
        10,
    ),
    Identifier(
        11,
        13,
    ),
    DecimalDigits(
        14,
        15,
    ),
]

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        15,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                15,
            ),
            kind: Expr(
                ExprNode {
                    pos: (
                        0,
                        15,
                    ),
                    kind: Call(
                        CallNode {
                            pos: (
                                0,
                                15,
                            ),
                            callee: ExprNode {
                                pos: (
                                    0,
                                    13,
                                ),
                                kind: MultiPartIdentifier(
                                    [
                                        IdentifierNode {
                                            pos: (
                                                0,
                                                8,
                                            ),
                                            name: "multiply",
                                            typ: None,
                                        },
                                        IdentifierNode {
                                            pos: (
                                                11,
                                                13,
                                            ),
                                            name: "by",
                                            typ: None,
                                        },
                                    ],
                                ),
                                typ: None,
                            },
                            args: [
                                ExprNode {
                                    pos: (
                                        9,
                                        10,
                                    ),
                                    kind: Literal(
                                        LiteralNode {
                                            pos: (
                                                9,
                                                10,
                                            ),
                                            kind: IntDecimal(
                                                1,
                                            ),
                                            typ: None,
                                        },
                                    ),
                                    typ: None,
                                },
                                ExprNode {
                                    pos: (
                                        14,
                                        15,
                                    ),
                                    kind: Literal(
                                        LiteralNode {
                                            pos: (
                                                14,
                                                15,
                                            ),
                                            kind: IntDecimal(
                                                2,
                                            ),
                                            typ: None,
                                        },
                                    ),
                                    typ: None,
                                },
                            ],
                            typ: None,
                        },
                    ),
                    typ: None,
                },
            ),
        },
    ],
}

