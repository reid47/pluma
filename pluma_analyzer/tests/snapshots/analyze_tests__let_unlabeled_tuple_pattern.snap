---
source: pluma_analyzer/tests/analyze_tests.rs
expression: "let tup = (47, \"wow\", 1.23)\nlet (a, b, c) = tup\n\nlet tup2 = (47, (\"wow\", 1.23))\nlet (d, (e, f)) = tup2"
---

=== Source ===
let tup = (47, "wow", 1.23)
let (a, b, c) = tup

let tup2 = (47, ("wow", 1.23))
let (d, (e, f)) = tup2

=== Top-level scope ===
Scope {
    levels: [
        ScopeLevel {
            bindings: [
                (
                    "a",
                    Binding {
                        typ: Int,
                        ref_count: 0,
                        pos: (
                            33,
                            34,
                        ),
                        kind: Let,
                    },
                ),
                (
                    "b",
                    Binding {
                        typ: String,
                        ref_count: 0,
                        pos: (
                            36,
                            37,
                        ),
                        kind: Let,
                    },
                ),
                (
                    "c",
                    Binding {
                        typ: Float,
                        ref_count: 0,
                        pos: (
                            39,
                            40,
                        ),
                        kind: Let,
                    },
                ),
                (
                    "d",
                    Binding {
                        typ: Int,
                        ref_count: 0,
                        pos: (
                            85,
                            86,
                        ),
                        kind: Let,
                    },
                ),
                (
                    "e",
                    Binding {
                        typ: String,
                        ref_count: 0,
                        pos: (
                            89,
                            90,
                        ),
                        kind: Let,
                    },
                ),
                (
                    "f",
                    Binding {
                        typ: Float,
                        ref_count: 0,
                        pos: (
                            92,
                            93,
                        ),
                        kind: Let,
                    },
                ),
                (
                    "tup",
                    Binding {
                        typ: UnlabeledTuple(
                            [
                                Int,
                                String,
                                Float,
                            ],
                        ),
                        ref_count: 1,
                        pos: (
                            4,
                            7,
                        ),
                        kind: Let,
                    },
                ),
                (
                    "tup2",
                    Binding {
                        typ: UnlabeledTuple(
                            [
                                Int,
                                UnlabeledTuple(
                                    [
                                        String,
                                        Float,
                                    ],
                                ),
                            ],
                        ),
                        ref_count: 1,
                        pos: (
                            53,
                            57,
                        ),
                        kind: Let,
                    },
                ),
            ],
        },
    ],
    type_bindings: [],
}

