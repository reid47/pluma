// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typeCheck array expressions 1`] = `
ModuleNode {
  "body": Array [
    ArrayExpressionNode {
      "comments": Array [],
      "elements": Array [
        NumberLiteralNode {
          "comments": Array [],
          "kind": "NumberLiteral",
          "location": Object {
            "colEnd": 2,
            "colStart": 1,
            "lineEnd": 1,
            "lineStart": 1,
          },
          "radix": 10,
          "type": "Number",
          "value": "1",
        },
        NumberLiteralNode {
          "comments": Array [],
          "kind": "NumberLiteral",
          "location": Object {
            "colEnd": 5,
            "colStart": 4,
            "lineEnd": 1,
            "lineStart": 1,
          },
          "radix": 10,
          "type": "Number",
          "value": "2",
        },
        NumberLiteralNode {
          "comments": Array [],
          "kind": "NumberLiteral",
          "location": Object {
            "colEnd": 8,
            "colStart": 7,
            "lineEnd": 1,
            "lineStart": 1,
          },
          "radix": 10,
          "type": "Number",
          "value": "3",
        },
      ],
      "kind": "ArrayExpression",
      "location": Object {
        "colEnd": 9,
        "colStart": 0,
        "lineEnd": 1,
        "lineStart": 1,
      },
      "type": "[Number]",
    },
  ],
  "comments": Array [],
  "kind": "Module",
  "location": Object {
    "colEnd": 9,
    "colStart": 0,
    "lineEnd": 1,
    "lineStart": 1,
  },
}
`;

exports[`typeCheck assignment expressions 1`] = `
ModuleNode {
  "body": Array [
    AssignmentNode {
      "comments": Array [],
      "constant": true,
      "kind": "Assignment",
      "leftSide": IdentifierNode {
        "comments": Array [],
        "kind": "Identifier",
        "location": Object {
          "colEnd": 3,
          "colStart": 0,
          "lineEnd": 1,
          "lineStart": 1,
        },
        "type": null,
        "value": "num",
      },
      "location": Object {
        "colEnd": 8,
        "colStart": 0,
        "lineEnd": 1,
        "lineStart": 1,
      },
      "rightSide": NumberLiteralNode {
        "comments": Array [],
        "kind": "NumberLiteral",
        "location": Object {
          "colEnd": 8,
          "colStart": 6,
          "lineEnd": 1,
          "lineStart": 1,
        },
        "radix": 10,
        "type": "Number",
        "value": "47",
      },
      "type": "Number",
    },
  ],
  "comments": Array [],
  "kind": "Module",
  "location": Object {
    "colEnd": 8,
    "colStart": 0,
    "lineEnd": 1,
    "lineStart": 1,
  },
}
`;

exports[`typeCheck assignment expressions 2`] = `
ModuleNode {
  "body": Array [
    AssignmentNode {
      "comments": Array [],
      "constant": true,
      "kind": "Assignment",
      "leftSide": IdentifierNode {
        "comments": Array [],
        "kind": "Identifier",
        "location": Object {
          "colEnd": 3,
          "colStart": 0,
          "lineEnd": 1,
          "lineStart": 1,
        },
        "type": null,
        "value": "str",
      },
      "location": Object {
        "colEnd": 11,
        "colStart": 0,
        "lineEnd": 1,
        "lineStart": 1,
      },
      "rightSide": StringExpressionNode {
        "comments": Array [],
        "kind": "StringExpression",
        "location": Object {
          "colEnd": 11,
          "colStart": 6,
          "lineEnd": 1,
          "lineStart": 1,
        },
        "parts": Array [
          StringLiteralNode {
            "comments": Array [],
            "kind": "StringLiteral",
            "location": Object {
              "colEnd": 11,
              "colStart": 6,
              "lineEnd": 1,
              "lineStart": 1,
            },
            "type": "String",
            "value": "wow",
          },
        ],
        "type": "String",
      },
      "type": "String",
    },
  ],
  "comments": Array [],
  "kind": "Module",
  "location": Object {
    "colEnd": 11,
    "colStart": 0,
    "lineEnd": 1,
    "lineStart": 1,
  },
}
`;

exports[`typeCheck single literal expressions 1`] = `
ModuleNode {
  "body": Array [
    NumberLiteralNode {
      "comments": Array [],
      "kind": "NumberLiteral",
      "location": Object {
        "colEnd": 2,
        "colStart": 0,
        "lineEnd": 1,
        "lineStart": 1,
      },
      "radix": 10,
      "type": "Number",
      "value": "47",
    },
  ],
  "comments": Array [],
  "kind": "Module",
  "location": Object {
    "colEnd": 2,
    "colStart": 0,
    "lineEnd": 1,
    "lineStart": 1,
  },
}
`;

exports[`typeCheck single literal expressions 2`] = `
ModuleNode {
  "body": Array [
    StringExpressionNode {
      "comments": Array [],
      "kind": "StringExpression",
      "location": Object {
        "colEnd": 5,
        "colStart": 0,
        "lineEnd": 1,
        "lineStart": 1,
      },
      "parts": Array [
        StringLiteralNode {
          "comments": Array [],
          "kind": "StringLiteral",
          "location": Object {
            "colEnd": 5,
            "colStart": 0,
            "lineEnd": 1,
            "lineStart": 1,
          },
          "type": "String",
          "value": "wow",
        },
      ],
      "type": "String",
    },
  ],
  "comments": Array [],
  "kind": "Module",
  "location": Object {
    "colEnd": 5,
    "colStart": 0,
    "lineEnd": 1,
    "lineStart": 1,
  },
}
`;

exports[`typeCheck single literal expressions 3`] = `
ModuleNode {
  "body": Array [
    BooleanLiteralNode {
      "comments": Array [],
      "kind": "BooleanLiteral",
      "location": Object {
        "colEnd": 4,
        "colStart": 0,
        "lineEnd": 1,
        "lineStart": 1,
      },
      "type": "Boolean",
      "value": "true",
    },
  ],
  "comments": Array [],
  "kind": "Module",
  "location": Object {
    "colEnd": 4,
    "colStart": 0,
    "lineEnd": 1,
    "lineStart": 1,
  },
}
`;

exports[`typeCheck single literal expressions 4`] = `
ModuleNode {
  "body": Array [
    BooleanLiteralNode {
      "comments": Array [],
      "kind": "BooleanLiteral",
      "location": Object {
        "colEnd": 5,
        "colStart": 0,
        "lineEnd": 1,
        "lineStart": 1,
      },
      "type": "Boolean",
      "value": "false",
    },
  ],
  "comments": Array [],
  "kind": "Module",
  "location": Object {
    "colEnd": 5,
    "colStart": 0,
    "lineEnd": 1,
    "lineStart": 1,
  },
}
`;
