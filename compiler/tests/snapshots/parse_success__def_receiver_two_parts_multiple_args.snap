---
source: compiler/tests/parse_success.rs
expression: "def Person . hello (String, Int) world () {\n  a, b, c => \"wow!\"\n}"
---

=== Source ===
def Person . hello (String, Int) world () {
  a, b, c => "wow!"
}

=== Tokens ===
[
    KeywordDef(
        0,
        3,
    ),
    Identifier(
        4,
        10,
    ),
    Dot(
        11,
        12,
    ),
    Identifier(
        13,
        18,
    ),
    LeftParen(
        19,
        20,
    ),
    Identifier(
        20,
        26,
    ),
    Comma(
        26,
        27,
    ),
    Identifier(
        28,
        31,
    ),
    RightParen(
        31,
        32,
    ),
    Identifier(
        33,
        38,
    ),
    LeftParen(
        39,
        40,
    ),
    RightParen(
        40,
        41,
    ),
    LeftBrace(
        42,
        43,
    ),
    LineBreak(
        43,
        44,
    ),
    Identifier(
        46,
        47,
    ),
    Comma(
        47,
        48,
    ),
    Identifier(
        49,
        50,
    ),
    Comma(
        50,
        51,
    ),
    Identifier(
        52,
        53,
    ),
    DoubleArrow(
        54,
        56,
    ),
    StringLiteral(
        58,
        62,
    ),
    LineBreak(
        63,
        64,
    ),
    RightBrace(
        64,
        65,
    ),
]

=== Comments ===
{}

=== AST ===
ModuleNode {
    pos: (
        0,
        65,
    ),
    body: [
        TopLevelStatementNode {
            pos: (
                0,
                65,
            ),
            kind: Def(
                DefNode {
                    pos: (
                        0,
                        65,
                    ),
                    kind: Method {
                        receiver: TypeIdentifierNode {
                            pos: (
                                4,
                                10,
                            ),
                            name: "Person",
                            generics: [],
                        },
                        signature: [
                            (
                                IdentifierNode {
                                    pos: (
                                        13,
                                        18,
                                    ),
                                    name: "hello",
                                },
                                TypeExprNode {
                                    pos: (
                                        19,
                                        32,
                                    ),
                                    kind: Tuple(
                                        [
                                            TypeExprNode {
                                                pos: (
                                                    20,
                                                    26,
                                                ),
                                                kind: Single(
                                                    TypeIdentifierNode {
                                                        pos: (
                                                            20,
                                                            26,
                                                        ),
                                                        name: "String",
                                                        generics: [],
                                                    },
                                                ),
                                                typ: Unknown,
                                            },
                                            TypeExprNode {
                                                pos: (
                                                    28,
                                                    31,
                                                ),
                                                kind: Single(
                                                    TypeIdentifierNode {
                                                        pos: (
                                                            28,
                                                            31,
                                                        ),
                                                        name: "Int",
                                                        generics: [],
                                                    },
                                                ),
                                                typ: Unknown,
                                            },
                                        ],
                                    ),
                                    typ: Unknown,
                                },
                            ),
                            (
                                IdentifierNode {
                                    pos: (
                                        33,
                                        38,
                                    ),
                                    name: "world",
                                },
                                TypeExprNode {
                                    pos: (
                                        39,
                                        41,
                                    ),
                                    kind: EmptyTuple,
                                    typ: Unknown,
                                },
                            ),
                        ],
                    },
                    return_type: None,
                    generic_type_constraints: [],
                    params: [
                        IdentifierNode {
                            pos: (
                                46,
                                47,
                            ),
                            name: "a",
                        },
                        IdentifierNode {
                            pos: (
                                49,
                                50,
                            ),
                            name: "b",
                        },
                        IdentifierNode {
                            pos: (
                                52,
                                53,
                            ),
                            name: "c",
                        },
                    ],
                    body: [
                        StatementNode {
                            pos: (
                                58,
                                62,
                            ),
                            kind: Expr(
                                ExprNode {
                                    pos: (
                                        58,
                                        62,
                                    ),
                                    kind: Literal(
                                        LiteralNode {
                                            pos: (
                                                58,
                                                62,
                                            ),
                                            kind: Str(
                                                "wow!",
                                            ),
                                        },
                                    ),
                                    typ: Unknown,
                                },
                            ),
                        },
                    ],
                },
            ),
        },
    ],
}

